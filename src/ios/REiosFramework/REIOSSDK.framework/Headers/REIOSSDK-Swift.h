#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="REIOSSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("CampaignTracking")
@interface CampaignTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSObject;

@interface CampaignTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end

@class NSCoder;

SWIFT_CLASS("_TtC8REIOSSDK18CarouselScrollView")
@interface CarouselScrollView : UIScrollView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end






@interface CarouselScrollView (SWIFT_EXTENSION(REIOSSDK))
- (void)autoScrollToNext;
- (void)autoScrollToPre;
@end


@interface CarouselScrollView (SWIFT_EXTENSION(REIOSSDK)) <UIScrollViewDelegate>
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
@end








SWIFT_CLASS("_TtC8REIOSSDK12CarouselView")
@interface CarouselView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end



@class NSBundle;

SWIFT_CLASS("_TtC8REIOSSDK22CarouselViewController")
@interface CarouselViewController : UIViewController
- (void)loadView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface CarouselViewController (SWIFT_EXTENSION(REIOSSDK))
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK30CarouselViewControllerDelegate_")
@protocol CarouselViewControllerDelegate
@optional
/// page will add to carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel willInstallCell:(NSInteger)cell;
/// page will remove from carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel willUninstallCell:(NSInteger)cell;
/// page did add to carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel didInstallCell:(NSInteger)cell;
/// page did remove from carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel didUninstallCell:(NSInteger)cell;
/// page scroll progress
/// \param carousel instance of CarouselViewController
///
/// \param from from page(first visiable page)
///
/// \param to to page
///
/// \param progress progess for scroll: progress > 0, page grow direction, < 0 page decrease diretion
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel scrollFrom:(NSInteger)from to:(NSInteger)to progress:(CGFloat)progress;
/// page did scroll from page to page
/// \param carousel instance of CarouselViewController
///
/// \param from from page(first visiable page)
///
/// \param to to cell
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel didScrollFrom:(NSInteger)from to:(NSInteger)to;
- (void)carouselDidScroll:(CarouselViewController * _Nonnull)carousel;
- (void)carouselWillBeginDragging:(CarouselViewController * _Nonnull)carousel;
- (void)carouselDidEndDragging:(CarouselViewController * _Nonnull)carousel willDecelerate:(BOOL)decelerate;
- (void)carouselWillBeginDecelerating:(CarouselViewController * _Nonnull)carousel;
- (void)carouselDidEndDecelerating:(CarouselViewController * _Nonnull)carousel;
- (void)carouselDidEndScrollingAnimation:(CarouselViewController * _Nonnull)carousel;
/// did tap cell
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
- (void)carousel:(CarouselViewController * _Nonnull)carousel didTapAt:(NSInteger)cell;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK20CarouselViewDelegate_")
@protocol CarouselViewDelegate
@optional
/// cell will add to carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel willInstallCell:(NSInteger)cell;
/// cell will remove from carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel willUninstallCell:(NSInteger)cell;
/// cell did add to carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel didInstallCell:(NSInteger)cell;
/// cell did remove from carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel didUninstallCell:(NSInteger)cell;
/// cell scroll progress
/// \param carousel instance of CarouselView
///
/// \param from from cell(first visiable cell)
///
/// \param to to cell
///
/// \param progress progess for scroll: progress > 0, cell grow direction, < 0 cell decrease diretion
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel scrollFrom:(NSInteger)from to:(NSInteger)to progress:(CGFloat)progress;
/// cell did scroll from cell to cell
/// \param carousel instance of CarouselView
///
/// \param from from cell(first visiable cell)
///
/// \param to to cell
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel didScrollFrom:(NSInteger)from to:(NSInteger)to;
- (void)carouselDidScroll:(CarouselView * _Nonnull)carousel;
- (void)carouselWillBeginDragging:(CarouselView * _Nonnull)carousel;
- (void)carouselDidEndDragging:(CarouselView * _Nonnull)carousel willDecelerate:(BOOL)decelerate;
- (void)carouselWillBeginDecelerating:(CarouselView * _Nonnull)carousel;
- (void)carouselDidEndDecelerating:(CarouselView * _Nonnull)carousel;
- (void)carouselDidEndScrollingAnimation:(CarouselView * _Nonnull)carousel;
/// did tap cell
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
- (void)carousel:(CarouselView * _Nonnull)carousel didTapAt:(NSInteger)cell;
@end


SWIFT_CLASS("_TtC8REIOSSDK11Deeplinking")
@interface Deeplinking : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("EventTracking")
@interface EventTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface EventTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end


SWIFT_CLASS_NAMED("FieldTracking")
@interface FieldTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface FieldTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, copy) NSString * _Nullable captureType;
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) NSString * _Nullable screenName;
@property (nonatomic, copy) NSString * _Nullable descriptionn;
@property (nonatomic, copy) NSString * _Nullable campaignId;
@property (nonatomic, copy) NSString * _Nullable markAsGoal;
@property (nonatomic, copy) NSString * _Nullable minDuration;
@property (nonatomic, copy) NSString * _Nullable minLength;
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end


SWIFT_CLASS("_TtC8REIOSSDK19NotificationHandler")
@interface NotificationHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


















SWIFT_CLASS_NAMED("NotificationList")
@interface NotificationList : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface NotificationList (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK21REiosDeeplinkReceiver_")
@protocol REiosDeeplinkReceiver
- (void)didReceiveDeeplinkWithData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end

@protocol REiosNotificationReceiver;
@protocol REiosSmartLinkReceiver;

SWIFT_CLASS("_TtC8REIOSSDK12REiosHandler")
@interface REiosHandler : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL debug;)
+ (BOOL)debug SWIFT_WARN_UNUSED_RESULT;
+ (void)setDebug:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <REiosNotificationReceiver> _Nullable notificationDelegate;)
+ (id <REiosNotificationReceiver> _Nullable)notificationDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setNotificationDelegate:(id <REiosNotificationReceiver> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <REiosDeeplinkReceiver> _Nullable deeplinkDelegate;)
+ (id <REiosDeeplinkReceiver> _Nullable)deeplinkDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDeeplinkDelegate:(id <REiosDeeplinkReceiver> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <REiosSmartLinkReceiver> _Nullable smartLinkDelegate;)
+ (id <REiosSmartLinkReceiver> _Nullable)smartLinkDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setSmartLinkDelegate:(id <REiosSmartLinkReceiver> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) NSInteger getEnv;)
+ (NSInteger)getEnv SWIFT_WARN_UNUSED_RESULT;
+ (void)setGetEnv:(NSInteger)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNNotificationCategory;

@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)initWithApiWithApiKey:(NSString * _Nonnull)apiKey registerNotificationCategory:(NSSet<UNNotificationCategory *> * _Nullable)category SWIFT_METHOD_FAMILY(none);
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)sdkRegistrationWithParams:(NSDictionary<NSString *, id> * _Nonnull)params success:(void (^ _Nonnull)(NSInteger))success failure:(void (^ _Nonnull)(NSString * _Nonnull))failure;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)initSdkWithAppId:(NSString * _Nonnull)id notificationCategory:(NSSet<UNNotificationCategory *> * _Nonnull)category success:(void (^ _Nonnull)(NSInteger))success failure:(void (^ _Nonnull)(NSString * _Nonnull))failure SWIFT_METHOD_FAMILY(none);
@end




@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)getDeeplinkingDataWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))success failure:(void (^ _Nonnull)(NSString * _Nonnull))failure;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)appConversionTracking;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)registerUserData:(NSString * _Nullable)params;
+ (void)sdkRegistrationWithDictWithParams:(NSDictionary<NSString *, id> * _Nonnull)params;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)setScreenName:(NSString * _Nonnull)name;
+ (void)setScreenNameWithScreenName:(NSString * _Nonnull)screenName;
@end




@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// 3.1  This method returns the list of notification sent by resulticks platform
+ (NSArray * _Nonnull)getNotificationList SWIFT_WARN_UNUSED_RESULT;
/// 3.2 This methods provides the notification list sent by resutlticks platform
/// \param successHandler Success handler provides list of notification iin the form of [Any]
///
+ (void)getNotificationListWithSuccessHandler:(void (^ _Nonnull)(NSArray * _Nonnull))successHandler;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)handleQrLinkWithUrl:(NSString * _Nonnull)url successHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)updateWithLocation:(NSString * _Nullable)location;
+ (void)updateLocationWithLat:(NSString * _Nonnull)strLat long:(NSString * _Nonnull)strLong;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)addCustomEvent:(NSString * _Nullable)event;
+ (void)addEventWithEventName:(NSString * _Nonnull)eventName data:(NSString * _Nullable)data;
+ (void)addEvent:(NSString * _Nonnull)eventName data:(NSDictionary<NSString *, id> * _Nonnull)data;
@end

@class UNNotification;
@class UNNotificationResponse;

@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// Setting up the foreground notification. If it is inapp notification it will be presented by Resulticks other wise it will set to alert notification
/// \param data notification data of type UNNotification
///
/// \param completionHandler Completion handler to present  alert notification
///
+ (void)setForegroundNotificationWithData:(UNNotification * _Nonnull)data completionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
/// <ol>
///   <li>
///     Set notification actions
///   </li>
/// </ol>
/// \param response Response that came from notification on click. It can  be default, dismiss, or maybelater
///
+ (void)setNotificationActionWithResponse:(UNNotificationResponse * _Nonnull)response;
+ (void)setForegroundNotification:(NSString * _Nullable)strNotification completionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
+ (void)setNotificationActionWithStrResponse:(NSString * _Nonnull)strResponse;
+ (void)setCustomNotificationWithUserInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// 4.1 Delete selected notification with notification dict
/// \param dict dict is a selected item to delete of type [String: Any]
///
+ (void)deleteNotificationListWithDict:(NSDictionary<NSString *, id> * _Nonnull)dict;
/// 4.2 Delete selected notification with campaign id
/// \param campaignId camapign id is a unique value of type String used to delete selected item from notification list.
///
+ (void)deleteNotificationByCampaignIdWithCampaignId:(NSString * _Nonnull)campaignId;
/// 4.3 Delete selected notification with notification id
/// \param campaignId notification id is a unique value of type String used to delete selected item from notification list.
///
+ (void)deleteNotificationByNotificationIdWithNotificationId:(NSString * _Nonnull)notificationId;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// <ol>
///   <li>
///     This method returns the total notification count from REIOSSDK of type Int
///   </li>
/// </ol>
+ (void)getReadNotificationCountOnSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 5.1 This method gets the unread count from REIOSSDK local database
/// \param success success provides the exact unread count of type Int
///
+ (void)getUnReadNotificationCountOnSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 5.2 This method gets the unread count from REIOSSDK local database
/// \param success success provides the exact unread count of type Int
///
+ (void)getTotalNotificationCountOnSuccess:(void (^ _Nonnull)(NSInteger))success;
/// <ol>
///   <li>
///     This method used to set the read status of inbox notification
///   </li>
/// </ol>
/// \param notificationId notificationId is a unique id used to set read status
///
/// \param success success is a completion handler which provides a count of unread status
///
+ (void)readNotificationWithNotificationId:(NSString * _Nonnull)notificationId onSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 6.1 This method used to set the read status of inbox notification to unread
/// \param notificationId notificationId is a unique id used to set read status
///
/// \param success success is a completion handler which provides a count of unread status
///
+ (void)unReadNotificationWithNotificationId:(NSString * _Nonnull)notificationId onSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 7 This method used to set the read status of inbox notification
/// \param notificationId notificationId is a unique id used to set read status
///
/// \param success success is a completion handler which provides a count of unread status
///
+ (void)notificationCTAClickedWithNotificationId:(NSString * _Nonnull)notificationId actionId:(NSInteger)actionId onSuccess:(void (^ _Nonnull)(NSInteger))success;
@end

@class NSUserActivity;

@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)handleOpenlinkWithUrl:(NSURL * _Nonnull)url successHandler:(void (^ _Nonnull)(NSString * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
+ (void)handleUniversalLinkWithUserActivity:(NSUserActivity * _Nonnull)userActivity successHandler:(void (^ _Nonnull)(NSString * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
+ (void)handleDynamicLinkWithUserActivity:(NSUserActivity * _Nonnull)userActivity successHandler:(void (^ _Nonnull)(NSString * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK25REiosNotificationReceiver_")
@protocol REiosNotificationReceiver
- (void)didReceiveResponseWithData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK22REiosSmartLinkReceiver_")
@protocol REiosSmartLinkReceiver
- (void)didReceiveSmartLinkWithData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end


SWIFT_CLASS_NAMED("ScreenTracking")
@interface ScreenTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ScreenTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end















@class UIEvent;

@interface UIViewController (SWIFT_EXTENSION(REIOSSDK))
- (void)motionEnded:(UIEventSubtype)motion withEvent:(UIEvent * _Nullable)event;
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="REIOSSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("CampaignTracking")
@interface CampaignTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSObject;

@interface CampaignTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end

@class NSCoder;

SWIFT_CLASS("_TtC8REIOSSDK18CarouselScrollView")
@interface CarouselScrollView : UIScrollView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end






@interface CarouselScrollView (SWIFT_EXTENSION(REIOSSDK))
- (void)autoScrollToNext;
- (void)autoScrollToPre;
@end


@interface CarouselScrollView (SWIFT_EXTENSION(REIOSSDK)) <UIScrollViewDelegate>
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
@end








SWIFT_CLASS("_TtC8REIOSSDK12CarouselView")
@interface CarouselView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end



@class NSBundle;

SWIFT_CLASS("_TtC8REIOSSDK22CarouselViewController")
@interface CarouselViewController : UIViewController
- (void)loadView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface CarouselViewController (SWIFT_EXTENSION(REIOSSDK))
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK30CarouselViewControllerDelegate_")
@protocol CarouselViewControllerDelegate
@optional
/// page will add to carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel willInstallCell:(NSInteger)cell;
/// page will remove from carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel willUninstallCell:(NSInteger)cell;
/// page did add to carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel didInstallCell:(NSInteger)cell;
/// page did remove from carousel
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel didUninstallCell:(NSInteger)cell;
/// page scroll progress
/// \param carousel instance of CarouselViewController
///
/// \param from from page(first visiable page)
///
/// \param to to page
///
/// \param progress progess for scroll: progress > 0, page grow direction, < 0 page decrease diretion
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel scrollFrom:(NSInteger)from to:(NSInteger)to progress:(CGFloat)progress;
/// page did scroll from page to page
/// \param carousel instance of CarouselViewController
///
/// \param from from page(first visiable page)
///
/// \param to to cell
///
///
/// returns:
/// Void
- (void)carousel:(CarouselViewController * _Nonnull)carousel didScrollFrom:(NSInteger)from to:(NSInteger)to;
- (void)carouselDidScroll:(CarouselViewController * _Nonnull)carousel;
- (void)carouselWillBeginDragging:(CarouselViewController * _Nonnull)carousel;
- (void)carouselDidEndDragging:(CarouselViewController * _Nonnull)carousel willDecelerate:(BOOL)decelerate;
- (void)carouselWillBeginDecelerating:(CarouselViewController * _Nonnull)carousel;
- (void)carouselDidEndDecelerating:(CarouselViewController * _Nonnull)carousel;
- (void)carouselDidEndScrollingAnimation:(CarouselViewController * _Nonnull)carousel;
/// did tap cell
/// \param carousel instance of CarouselViewController
///
/// \param cell cell index
///
- (void)carousel:(CarouselViewController * _Nonnull)carousel didTapAt:(NSInteger)cell;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK20CarouselViewDelegate_")
@protocol CarouselViewDelegate
@optional
/// cell will add to carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel willInstallCell:(NSInteger)cell;
/// cell will remove from carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel willUninstallCell:(NSInteger)cell;
/// cell did add to carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel didInstallCell:(NSInteger)cell;
/// cell did remove from carousel
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel didUninstallCell:(NSInteger)cell;
/// cell scroll progress
/// \param carousel instance of CarouselView
///
/// \param from from cell(first visiable cell)
///
/// \param to to cell
///
/// \param progress progess for scroll: progress > 0, cell grow direction, < 0 cell decrease diretion
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel scrollFrom:(NSInteger)from to:(NSInteger)to progress:(CGFloat)progress;
/// cell did scroll from cell to cell
/// \param carousel instance of CarouselView
///
/// \param from from cell(first visiable cell)
///
/// \param to to cell
///
///
/// returns:
/// Void
- (void)carousel:(CarouselView * _Nonnull)carousel didScrollFrom:(NSInteger)from to:(NSInteger)to;
- (void)carouselDidScroll:(CarouselView * _Nonnull)carousel;
- (void)carouselWillBeginDragging:(CarouselView * _Nonnull)carousel;
- (void)carouselDidEndDragging:(CarouselView * _Nonnull)carousel willDecelerate:(BOOL)decelerate;
- (void)carouselWillBeginDecelerating:(CarouselView * _Nonnull)carousel;
- (void)carouselDidEndDecelerating:(CarouselView * _Nonnull)carousel;
- (void)carouselDidEndScrollingAnimation:(CarouselView * _Nonnull)carousel;
/// did tap cell
/// \param carousel instance of CarouselView
///
/// \param cell cell index
///
- (void)carousel:(CarouselView * _Nonnull)carousel didTapAt:(NSInteger)cell;
@end


SWIFT_CLASS("_TtC8REIOSSDK11Deeplinking")
@interface Deeplinking : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("EventTracking")
@interface EventTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface EventTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end


SWIFT_CLASS_NAMED("FieldTracking")
@interface FieldTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface FieldTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, copy) NSString * _Nullable captureType;
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) NSString * _Nullable screenName;
@property (nonatomic, copy) NSString * _Nullable descriptionn;
@property (nonatomic, copy) NSString * _Nullable campaignId;
@property (nonatomic, copy) NSString * _Nullable markAsGoal;
@property (nonatomic, copy) NSString * _Nullable minDuration;
@property (nonatomic, copy) NSString * _Nullable minLength;
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end


SWIFT_CLASS("_TtC8REIOSSDK19NotificationHandler")
@interface NotificationHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


















SWIFT_CLASS_NAMED("NotificationList")
@interface NotificationList : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface NotificationList (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK21REiosDeeplinkReceiver_")
@protocol REiosDeeplinkReceiver
- (void)didReceiveDeeplinkWithData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end

@protocol REiosNotificationReceiver;
@protocol REiosSmartLinkReceiver;

SWIFT_CLASS("_TtC8REIOSSDK12REiosHandler")
@interface REiosHandler : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL debug;)
+ (BOOL)debug SWIFT_WARN_UNUSED_RESULT;
+ (void)setDebug:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <REiosNotificationReceiver> _Nullable notificationDelegate;)
+ (id <REiosNotificationReceiver> _Nullable)notificationDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setNotificationDelegate:(id <REiosNotificationReceiver> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <REiosDeeplinkReceiver> _Nullable deeplinkDelegate;)
+ (id <REiosDeeplinkReceiver> _Nullable)deeplinkDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDeeplinkDelegate:(id <REiosDeeplinkReceiver> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) id <REiosSmartLinkReceiver> _Nullable smartLinkDelegate;)
+ (id <REiosSmartLinkReceiver> _Nullable)smartLinkDelegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setSmartLinkDelegate:(id <REiosSmartLinkReceiver> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) NSInteger getEnv;)
+ (NSInteger)getEnv SWIFT_WARN_UNUSED_RESULT;
+ (void)setGetEnv:(NSInteger)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNNotificationCategory;

@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)initWithApiWithApiKey:(NSString * _Nonnull)apiKey registerNotificationCategory:(NSSet<UNNotificationCategory *> * _Nullable)category SWIFT_METHOD_FAMILY(none);
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)sdkRegistrationWithParams:(NSDictionary<NSString *, id> * _Nonnull)params success:(void (^ _Nonnull)(NSInteger))success failure:(void (^ _Nonnull)(NSString * _Nonnull))failure;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)initSdkWithAppId:(NSString * _Nonnull)id notificationCategory:(NSSet<UNNotificationCategory *> * _Nonnull)category success:(void (^ _Nonnull)(NSInteger))success failure:(void (^ _Nonnull)(NSString * _Nonnull))failure SWIFT_METHOD_FAMILY(none);
@end




@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)getDeeplinkingDataWithSuccess:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))success failure:(void (^ _Nonnull)(NSString * _Nonnull))failure;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)appConversionTracking;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)registerUserData:(NSString * _Nullable)params;
+ (void)sdkRegistrationWithDictWithParams:(NSDictionary<NSString *, id> * _Nonnull)params;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)setScreenName:(NSString * _Nonnull)name;
+ (void)setScreenNameWithScreenName:(NSString * _Nonnull)screenName;
@end




@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// 3.1  This method returns the list of notification sent by resulticks platform
+ (NSArray * _Nonnull)getNotificationList SWIFT_WARN_UNUSED_RESULT;
/// 3.2 This methods provides the notification list sent by resutlticks platform
/// \param successHandler Success handler provides list of notification iin the form of [Any]
///
+ (void)getNotificationListWithSuccessHandler:(void (^ _Nonnull)(NSArray * _Nonnull))successHandler;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)handleQrLinkWithUrl:(NSString * _Nonnull)url successHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)updateWithLocation:(NSString * _Nullable)location;
+ (void)updateLocationWithLat:(NSString * _Nonnull)strLat long:(NSString * _Nonnull)strLong;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)addCustomEvent:(NSString * _Nullable)event;
+ (void)addEventWithEventName:(NSString * _Nonnull)eventName data:(NSString * _Nullable)data;
+ (void)addEvent:(NSString * _Nonnull)eventName data:(NSDictionary<NSString *, id> * _Nonnull)data;
@end

@class UNNotification;
@class UNNotificationResponse;

@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// Setting up the foreground notification. If it is inapp notification it will be presented by Resulticks other wise it will set to alert notification
/// \param data notification data of type UNNotification
///
/// \param completionHandler Completion handler to present  alert notification
///
+ (void)setForegroundNotificationWithData:(UNNotification * _Nonnull)data completionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
/// <ol>
///   <li>
///     Set notification actions
///   </li>
/// </ol>
/// \param response Response that came from notification on click. It can  be default, dismiss, or maybelater
///
+ (void)setNotificationActionWithResponse:(UNNotificationResponse * _Nonnull)response;
+ (void)setForegroundNotification:(NSString * _Nullable)strNotification completionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
+ (void)setNotificationActionWithStrResponse:(NSString * _Nonnull)strResponse;
+ (void)setCustomNotificationWithUserInfo:(NSDictionary<NSString *, id> * _Nonnull)userInfo;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// 4.1 Delete selected notification with notification dict
/// \param dict dict is a selected item to delete of type [String: Any]
///
+ (void)deleteNotificationListWithDict:(NSDictionary<NSString *, id> * _Nonnull)dict;
/// 4.2 Delete selected notification with campaign id
/// \param campaignId camapign id is a unique value of type String used to delete selected item from notification list.
///
+ (void)deleteNotificationByCampaignIdWithCampaignId:(NSString * _Nonnull)campaignId;
/// 4.3 Delete selected notification with notification id
/// \param campaignId notification id is a unique value of type String used to delete selected item from notification list.
///
+ (void)deleteNotificationByNotificationIdWithNotificationId:(NSString * _Nonnull)notificationId;
@end


@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
/// <ol>
///   <li>
///     This method returns the total notification count from REIOSSDK of type Int
///   </li>
/// </ol>
+ (void)getReadNotificationCountOnSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 5.1 This method gets the unread count from REIOSSDK local database
/// \param success success provides the exact unread count of type Int
///
+ (void)getUnReadNotificationCountOnSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 5.2 This method gets the unread count from REIOSSDK local database
/// \param success success provides the exact unread count of type Int
///
+ (void)getTotalNotificationCountOnSuccess:(void (^ _Nonnull)(NSInteger))success;
/// <ol>
///   <li>
///     This method used to set the read status of inbox notification
///   </li>
/// </ol>
/// \param notificationId notificationId is a unique id used to set read status
///
/// \param success success is a completion handler which provides a count of unread status
///
+ (void)readNotificationWithNotificationId:(NSString * _Nonnull)notificationId onSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 6.1 This method used to set the read status of inbox notification to unread
/// \param notificationId notificationId is a unique id used to set read status
///
/// \param success success is a completion handler which provides a count of unread status
///
+ (void)unReadNotificationWithNotificationId:(NSString * _Nonnull)notificationId onSuccess:(void (^ _Nonnull)(NSInteger))success;
/// 7 This method used to set the read status of inbox notification
/// \param notificationId notificationId is a unique id used to set read status
///
/// \param success success is a completion handler which provides a count of unread status
///
+ (void)notificationCTAClickedWithNotificationId:(NSString * _Nonnull)notificationId actionId:(NSInteger)actionId onSuccess:(void (^ _Nonnull)(NSInteger))success;
@end

@class NSUserActivity;

@interface REiosHandler (SWIFT_EXTENSION(REIOSSDK))
+ (void)handleOpenlinkWithUrl:(NSURL * _Nonnull)url successHandler:(void (^ _Nonnull)(NSString * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
+ (void)handleUniversalLinkWithUserActivity:(NSUserActivity * _Nonnull)userActivity successHandler:(void (^ _Nonnull)(NSString * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
+ (void)handleDynamicLinkWithUserActivity:(NSUserActivity * _Nonnull)userActivity successHandler:(void (^ _Nonnull)(NSString * _Nonnull))successHandler failureHandler:(void (^ _Nonnull)(NSString * _Nonnull))failureHandler;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK25REiosNotificationReceiver_")
@protocol REiosNotificationReceiver
- (void)didReceiveResponseWithData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end


SWIFT_PROTOCOL("_TtP8REIOSSDK22REiosSmartLinkReceiver_")
@protocol REiosSmartLinkReceiver
- (void)didReceiveSmartLinkWithData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end


SWIFT_CLASS_NAMED("ScreenTracking")
@interface ScreenTracking : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface ScreenTracking (SWIFT_EXTENSION(REIOSSDK))
@property (nonatomic, strong) NSObject * _Nullable dict;
@property (nonatomic, copy) NSDate * _Nullable date;
@end















@class UIEvent;

@interface UIViewController (SWIFT_EXTENSION(REIOSSDK))
- (void)motionEnded:(UIEventSubtype)motion withEvent:(UIEvent * _Nullable)event;
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
